{"version":3,"sources":["js/DOM.js","js/search.js","../node_modules/regenerator-runtime/runtime.js","js/index.js"],"names":["DOMSelectors","displayContainer","document","querySelector","searchBar","getElementById","allButton","fighterButton","tankButton","mageButton","assassinButton","supportButton","marksmanButton","errorMessage","console","log","click","addEventListener","e","innerHTML","preventDefault","searchPara","value","searchInit","query","fetch","response","json","list","champNames","Object","values","data","forEach","champ","stats","info","insertAdjacentHTML","id","name","tags","init","fighter","tank","mage","assassin","support","marksman","champFighter","filter","indexOf","champTank","champMage","champAssassin","champSupport","champMarksman"],"mappings":"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":"js.00a46daa.js","sourceRoot":"..\\src","sourcesContent":["const DOMSelectors = {\r\n  displayContainer: document.querySelector(\".champ-list\"),\r\n  searchBar: document.getElementById(\"search-bar\"),\r\n  allButton: document.querySelector(\".all-btn\"),\r\n  fighterButton: document.querySelector(\".fighter-btn\"),\r\n  tankButton: document.querySelector(\".tank-btn\"),\r\n  mageButton: document.querySelector(\".mage-btn\"),\r\n  assassinButton: document.querySelector(\".assassin-btn\"),\r\n  supportButton: document.querySelector(\".support-btn\"),\r\n  marksmanButton: document.querySelector(\".marksman-btn\"),\r\n  errorMessage: document.querySelector(\".search-error\"),\r\n};\r\n\r\nexport { DOMSelectors };\r\n","import { DOMSelectors } from \"./DOM\";\r\n\r\nconsole.log(DOMSelectors);\r\n\r\nconst click = function () {\r\n  DOMSelectors.searchBar.addEventListener(\"keyup\", function (e) {\r\n    DOMSelectors.errorMessage.innerHTML = \"\";\r\n    e.preventDefault();\r\n    DOMSelectors.displayContainer.innerHTML = \"\";\r\n    const searchPara = DOMSelectors.searchBar.value;\r\n    console.log(searchPara);\r\n    const searchInit = async function () {\r\n      let query = `http://ddragon.leagueoflegends.com/cdn/10.24.1/data/en_US/champion/${searchPara}.json`;\r\n      console.log(query);\r\n      //resets to init if search bar is blank\r\n      if (searchPara === \"\") {\r\n        query = `http://ddragon.leagueoflegends.com/cdn/10.24.1/data/en_US/champion.json`;\r\n      }\r\n      try {\r\n        const response = await fetch(query);\r\n        const list = await response.json();\r\n        const champNames = Object.values(list.data);\r\n        console.log(champNames);\r\n        champNames.forEach((champ) => {\r\n          const stats = Object.values(champ.info);\r\n          DOMSelectors.displayContainer.insertAdjacentHTML(\r\n            \"beforeend\",\r\n            `<div class=\"card\"> \r\n                    <div class=\"champ-card\">\r\n                    <div class=\"champ-card-front\">\r\n                      <img\r\n                        src=\"http://ddragon.leagueoflegends.com/cdn/img/champion/loading/${champ.id}_0.jpg\"\r\n                        alt=\"\"\r\n                        class=\"poster\"\r\n                      />\r\n                    </div>\r\n                    <div class=\"champ-card-back\">\r\n                      <h3 class=\"champ-card-header\">${champ.name}</h3>\r\n                      <div class=\"stat-box\">\r\n                        <p class=\"champ-stats\">Basic Stats</p>\r\n                        <div class=\"champ-stats-info\">\r\n                          <p class=\"champ-stats-info, attack\">Attack: ${stats[0]}</p>\r\n                          <p class=\"champ-stats-info, defense\">Defense: ${stats[1]}</p>\r\n                          <p class=\"champ-stats-info, magic\">Magic: ${stats[2]}</p>\r\n                          <p class=\"champ-stats-info, difficulty\">Difficulty: ${stats[3]}</p>\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"class-box\">\r\n                        <p class=\"champ-class\"><b>Class</b></p>\r\n                        <p class=\"champ-class\">${champ.tags}</p>\r\n                      </div>\r\n                    </div>\r\n                    </div> \r\n                  </div>`\r\n          );\r\n        });\r\n      } catch (error) {\r\n        DOMSelectors.errorMessage.innerHTML = \"\";\r\n        DOMSelectors.errorMessage.insertAdjacentHTML(\r\n          \"beforeend\",\r\n          `<p class=\"search-error-text\">No champ found! Check for proper capitalization or make the champ's name one word</p>`\r\n        );\r\n      }\r\n    };\r\n    searchInit();\r\n  });\r\n};\r\n\r\nclick();\r\n\r\nexport { click };\r\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","import { DOMSelectors } from \"./DOM\";\r\nimport { click } from \"./search\";\r\n\r\nconsole.log(DOMSelectors);\r\n\r\nimport \"regenerator-runtime/runtime\";\r\n\r\nconst init = async function () {\r\n  const query = `http://ddragon.leagueoflegends.com/cdn/10.24.1/data/en_US/champion.json`;\r\n  try {\r\n    const response = await fetch(query);\r\n    const list = await response.json();\r\n    //coverts the api objects into an array, allowing it to be passed through forEach\r\n    const champNames = Object.values(list.data);\r\n    console.log(champNames);\r\n    const fighter = \"Fighter\";\r\n    const tank = \"Tank\";\r\n    const mage = \"Mage\";\r\n    const assassin = \"Assassin\";\r\n    const support = \"Support\";\r\n    const marksman = \"Marksman\";\r\n    const champFighter = champNames.filter((champ) => {\r\n      return champ.tags.indexOf(fighter) >= 0;\r\n    });\r\n    const champTank = champNames.filter((champ) => {\r\n      return champ.tags.indexOf(tank) >= 0;\r\n    });\r\n    const champMage = champNames.filter((champ) => {\r\n      return champ.tags.indexOf(mage) >= 0;\r\n    });\r\n    const champAssassin = champNames.filter((champ) => {\r\n      return champ.tags.indexOf(assassin) >= 0;\r\n    });\r\n    const champSupport = champNames.filter((champ) => {\r\n      return champ.tags.indexOf(support) >= 0;\r\n    });\r\n    const champMarksman = champNames.filter((champ) => {\r\n      return champ.tags.indexOf(marksman) >= 0;\r\n    });\r\n    //using champ.id instead of champ.name gives the names with no spaces, which is needed if accessing a url such as the images\r\n    DOMSelectors.allButton.addEventListener(\"click\", function (e) {\r\n      DOMSelectors.displayContainer.innerHTML = \"\";\r\n      champNames.forEach((champ) => {\r\n        //stats had the same issue as the actual values, turned them into an array to display them\r\n        const stats = Object.values(champ.info);\r\n        DOMSelectors.displayContainer.insertAdjacentHTML(\r\n          \"beforeend\",\r\n          `<div class=\"card\"> \r\n        <div class=\"champ-card\">\r\n        <div class=\"champ-card-front\">\r\n          <img\r\n            src=\"http://ddragon.leagueoflegends.com/cdn/img/champion/loading/${champ.id}_0.jpg\"\r\n            alt=\"\"\r\n            class=\"poster\"\r\n          />\r\n        </div>\r\n        <div class=\"champ-card-back\">\r\n          <h3 class=\"champ-card-header\">${champ.name}</h3>\r\n          <div class=\"stat-box\">\r\n            <p class=\"champ-stats\">Basic Stats</p>\r\n            <div class=\"champ-stats-info\">\r\n              <p class=\"champ-stats-info, attack\">Attack: ${stats[0]}</p>\r\n              <p class=\"champ-stats-info, defense\">Defense: ${stats[1]}</p>\r\n              <p class=\"champ-stats-info, magic\">Magic: ${stats[2]}</p>\r\n              <p class=\"champ-stats-info, difficulty\">Difficulty: ${stats[3]}</p>\r\n            </div>\r\n          </div>\r\n          <div class=\"class-box\">\r\n            <p class=\"champ-class\"><b>Class</b></p>\r\n            <p class=\"champ-class\">${champ.tags}</p>\r\n          </div>\r\n        </div>\r\n        </div> \r\n      </div>`\r\n        );\r\n      });\r\n    });\r\n    DOMSelectors.fighterButton.addEventListener(\"click\", function (e) {\r\n      DOMSelectors.displayContainer.innerHTML = \"\";\r\n      champFighter.forEach((champ) => {\r\n        //stats had the same issue as the actual values, turned them into an array to display them\r\n        const stats = Object.values(champ.info);\r\n        DOMSelectors.displayContainer.insertAdjacentHTML(\r\n          \"beforeend\",\r\n          `<div class=\"card\"> \r\n        <div class=\"champ-card\">\r\n        <div class=\"champ-card-front\">\r\n          <img\r\n            src=\"http://ddragon.leagueoflegends.com/cdn/img/champion/loading/${champ.id}_0.jpg\"\r\n            alt=\"\"\r\n            class=\"poster\"\r\n          />\r\n        </div>\r\n        <div class=\"champ-card-back\">\r\n          <h3 class=\"champ-card-header\">${champ.name}</h3>\r\n          <div class=\"stat-box\">\r\n            <p class=\"champ-stats\">Basic Stats</p>\r\n            <div class=\"champ-stats-info\">\r\n              <p class=\"champ-stats-info, attack\">Attack: ${stats[0]}</p>\r\n              <p class=\"champ-stats-info, defense\">Defense: ${stats[1]}</p>\r\n              <p class=\"champ-stats-info, magic\">Magic: ${stats[2]}</p>\r\n              <p class=\"champ-stats-info, difficulty\">Difficulty: ${stats[3]}</p>\r\n            </div>\r\n          </div>\r\n          <div class=\"class-box\">\r\n            <p class=\"champ-class\"><b>Class</b></p>\r\n            <p class=\"champ-class\">${champ.tags}</p>\r\n          </div>\r\n        </div>\r\n        </div> \r\n      </div>`\r\n        );\r\n      });\r\n    });\r\n    DOMSelectors.tankButton.addEventListener(\"click\", function (e) {\r\n      DOMSelectors.displayContainer.innerHTML = \"\";\r\n      champTank.forEach((champ) => {\r\n        //stats had the same issue as the actual values, turned them into an array to display them\r\n        const stats = Object.values(champ.info);\r\n        DOMSelectors.displayContainer.insertAdjacentHTML(\r\n          \"beforeend\",\r\n          `<div class=\"card\"> \r\n        <div class=\"champ-card\">\r\n        <div class=\"champ-card-front\">\r\n          <img\r\n            src=\"http://ddragon.leagueoflegends.com/cdn/img/champion/loading/${champ.id}_0.jpg\"\r\n            alt=\"\"\r\n            class=\"poster\"\r\n          />\r\n        </div>\r\n        <div class=\"champ-card-back\">\r\n          <h3 class=\"champ-card-header\">${champ.name}</h3>\r\n          <div class=\"stat-box\">\r\n            <p class=\"champ-stats\">Basic Stats</p>\r\n            <div class=\"champ-stats-info\">\r\n              <p class=\"champ-stats-info, attack\">Attack: ${stats[0]}</p>\r\n              <p class=\"champ-stats-info, defense\">Defense: ${stats[1]}</p>\r\n              <p class=\"champ-stats-info, magic\">Magic: ${stats[2]}</p>\r\n              <p class=\"champ-stats-info, difficulty\">Difficulty: ${stats[3]}</p>\r\n            </div>\r\n          </div>\r\n          <div class=\"class-box\">\r\n            <p class=\"champ-class\"><b>Class</b></p>\r\n            <p class=\"champ-class\">${champ.tags}</p>\r\n          </div>\r\n        </div>\r\n        </div> \r\n      </div>`\r\n        );\r\n      });\r\n    });\r\n    DOMSelectors.mageButton.addEventListener(\"click\", function (e) {\r\n      DOMSelectors.displayContainer.innerHTML = \"\";\r\n      champMage.forEach((champ) => {\r\n        //stats had the same issue as the actual values, turned them into an array to display them\r\n        const stats = Object.values(champ.info);\r\n        DOMSelectors.displayContainer.insertAdjacentHTML(\r\n          \"beforeend\",\r\n          `<div class=\"card\"> \r\n        <div class=\"champ-card\">\r\n        <div class=\"champ-card-front\">\r\n          <img\r\n            src=\"http://ddragon.leagueoflegends.com/cdn/img/champion/loading/${champ.id}_0.jpg\"\r\n            alt=\"\"\r\n            class=\"poster\"\r\n          />\r\n        </div>\r\n        <div class=\"champ-card-back\">\r\n          <h3 class=\"champ-card-header\">${champ.name}</h3>\r\n          <div class=\"stat-box\">\r\n            <p class=\"champ-stats\">Basic Stats</p>\r\n            <div class=\"champ-stats-info\">\r\n              <p class=\"champ-stats-info, attack\">Attack: ${stats[0]}</p>\r\n              <p class=\"champ-stats-info, defense\">Defense: ${stats[1]}</p>\r\n              <p class=\"champ-stats-info, magic\">Magic: ${stats[2]}</p>\r\n              <p class=\"champ-stats-info, difficulty\">Difficulty: ${stats[3]}</p>\r\n            </div>\r\n          </div>\r\n          <div class=\"class-box\">\r\n            <p class=\"champ-class\"><b>Class</b></p>\r\n            <p class=\"champ-class\">${champ.tags}</p>\r\n          </div>\r\n        </div>\r\n        </div> \r\n      </div>`\r\n        );\r\n      });\r\n    });\r\n    DOMSelectors.assassinButton.addEventListener(\"click\", function (e) {\r\n      DOMSelectors.displayContainer.innerHTML = \"\";\r\n      champAssassin.forEach((champ) => {\r\n        //stats had the same issue as the actual values, turned them into an array to display them\r\n        const stats = Object.values(champ.info);\r\n        DOMSelectors.displayContainer.insertAdjacentHTML(\r\n          \"beforeend\",\r\n          `<div class=\"card\"> \r\n        <div class=\"champ-card\">\r\n        <div class=\"champ-card-front\">\r\n          <img\r\n            src=\"http://ddragon.leagueoflegends.com/cdn/img/champion/loading/${champ.id}_0.jpg\"\r\n            alt=\"\"\r\n            class=\"poster\"\r\n          />\r\n        </div>\r\n        <div class=\"champ-card-back\">\r\n          <h3 class=\"champ-card-header\">${champ.name}</h3>\r\n          <div class=\"stat-box\">\r\n            <p class=\"champ-stats\">Basic Stats</p>\r\n            <div class=\"champ-stats-info\">\r\n              <p class=\"champ-stats-info, attack\">Attack: ${stats[0]}</p>\r\n              <p class=\"champ-stats-info, defense\">Defense: ${stats[1]}</p>\r\n              <p class=\"champ-stats-info, magic\">Magic: ${stats[2]}</p>\r\n              <p class=\"champ-stats-info, difficulty\">Difficulty: ${stats[3]}</p>\r\n            </div>\r\n          </div>\r\n          <div class=\"class-box\">\r\n            <p class=\"champ-class\"><b>Class</b></p>\r\n            <p class=\"champ-class\">${champ.tags}</p>\r\n          </div>\r\n        </div>\r\n        </div> \r\n      </div>`\r\n        );\r\n      });\r\n    });\r\n    DOMSelectors.supportButton.addEventListener(\"click\", function (e) {\r\n      DOMSelectors.displayContainer.innerHTML = \"\";\r\n      champSupport.forEach((champ) => {\r\n        //stats had the same issue as the actual values, turned them into an array to display them\r\n        const stats = Object.values(champ.info);\r\n        DOMSelectors.displayContainer.insertAdjacentHTML(\r\n          \"beforeend\",\r\n          `<div class=\"card\"> \r\n        <div class=\"champ-card\">\r\n        <div class=\"champ-card-front\">\r\n          <img\r\n            src=\"http://ddragon.leagueoflegends.com/cdn/img/champion/loading/${champ.id}_0.jpg\"\r\n            alt=\"\"\r\n            class=\"poster\"\r\n          />\r\n        </div>\r\n        <div class=\"champ-card-back\">\r\n          <h3 class=\"champ-card-header\">${champ.name}</h3>\r\n          <div class=\"stat-box\">\r\n            <p class=\"champ-stats\">Basic Stats</p>\r\n            <div class=\"champ-stats-info\">\r\n              <p class=\"champ-stats-info, attack\">Attack: ${stats[0]}</p>\r\n              <p class=\"champ-stats-info, defense\">Defense: ${stats[1]}</p>\r\n              <p class=\"champ-stats-info, magic\">Magic: ${stats[2]}</p>\r\n              <p class=\"champ-stats-info, difficulty\">Difficulty: ${stats[3]}</p>\r\n            </div>\r\n          </div>\r\n          <div class=\"class-box\">\r\n            <p class=\"champ-class\"><b>Class</b></p>\r\n            <p class=\"champ-class\">${champ.tags}</p>\r\n          </div>\r\n        </div>\r\n        </div> \r\n      </div>`\r\n        );\r\n      });\r\n    });\r\n    DOMSelectors.marksmanButton.addEventListener(\"click\", function (e) {\r\n      DOMSelectors.displayContainer.innerHTML = \"\";\r\n      champMarksman.forEach((champ) => {\r\n        //stats had the same issue as the actual values, turned them into an array to display them\r\n        const stats = Object.values(champ.info);\r\n        DOMSelectors.displayContainer.insertAdjacentHTML(\r\n          \"beforeend\",\r\n          `<div class=\"card\"> \r\n        <div class=\"champ-card\">\r\n        <div class=\"champ-card-front\">\r\n          <img\r\n            src=\"http://ddragon.leagueoflegends.com/cdn/img/champion/loading/${champ.id}_0.jpg\"\r\n            alt=\"\"\r\n            class=\"poster\"\r\n          />\r\n        </div>\r\n        <div class=\"champ-card-back\">\r\n          <h3 class=\"champ-card-header\">${champ.name}</h3>\r\n          <div class=\"stat-box\">\r\n            <p class=\"champ-stats\">Basic Stats</p>\r\n            <div class=\"champ-stats-info\">\r\n              <p class=\"champ-stats-info, attack\">Attack: ${stats[0]}</p>\r\n              <p class=\"champ-stats-info, defense\">Defense: ${stats[1]}</p>\r\n              <p class=\"champ-stats-info, magic\">Magic: ${stats[2]}</p>\r\n              <p class=\"champ-stats-info, difficulty\">Difficulty: ${stats[3]}</p>\r\n            </div>\r\n          </div>\r\n          <div class=\"class-box\">\r\n            <p class=\"champ-class\"><b>Class</b></p>\r\n            <p class=\"champ-class\">${champ.tags}</p>\r\n          </div>\r\n        </div>\r\n        </div> \r\n      </div>`\r\n        );\r\n      });\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\ninit();\r\n"]}